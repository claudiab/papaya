/**
 * @ngdoc overview
 * @name demoCalApp
 * @description
 * # demoCalApp
 *
 * Main module of the application.
 */
var app = angular.module('demoCalApp', []);


app.controller('smpIntCalCtrl', function($scope) {
    console.log('Main controller');

    $scope.calData = {
        "loanAmount": "15000",
         "loanTerm": 30,
       
        "loanTermType": "months",
          "interestRateInt": "0.0", //0.625
        "interestRate": "0.03", //0.625
        "salesTaxRate": ".07",
        "paymentDate": "05/17/2017",
        "daysLate": 21,
        "daysLateType": "days",
        "latePayments": 1
    };
   $scope.terms = [
    {id : 0, value : 30},
    {id : 1, value : 48},
    {id : 1, value : 60}
];
    $scope.amoPmtData = [];

    $scope.init = function() {
            $scope.date = $("#datepicker").val();

              $scope.displayAmorSchedule = false;
            $scope.loanAmount = $scope.calData.loanAmount;
            $scope.loanRate = $scope.calData.interestRateInt;
             $scope.loanTerm =  $scope.selectedTerm;
            $scope.salesTax = $scope.calData.salesTaxRate;
              $("#highcharts-2hxld18-0").hide();
        },
        $scope.getMonthPmt = function() {
            //$scope.loanMoPmt =  ($scope.loanAmount / $scope.loanTerm);
            //$scope.loanMoPmt =   parseInt(($scope.loanAmount / $scope.loanTerm) + ($scope.loanRate)).toFixed(3);
            //console.debug("  $scope.loanMoPmt: " +   $scope.loanMoPmt);
            var P = $scope.loanAmount;
            var r = ($scope.loanRate / 12) / 100;
            var N = $scope.loanTerm;

            //console.debug("P= " + P);
            //console.debug("r= " + r);
            //  console.debug("N= " + N);
            $scope.loanMoPmt = P * (r * Math.pow(1 + r, N)) / (Math.pow(1 + r, N) - 1);
            return $scope.loanMoPmt;
        },

        $scope.getCalInterest = function() {
            var t = ($scope.loanMoPmt * 60) - 15000;
            var z = ($scope.calData.interestRate / 100) / 12; //monthly rate

            var y = z * $scope.loanAmount;
            console.debug("t: " + t);
            console.debug("z: " + z);
            console.debug("y: " + y); //correct interest
            y += y;
            $scope.totalInterest = parseFloat(t).toFixed(2);
            // = ($scope.loanAmount *y)*z;
            // $scope.totalInterest =   ($scope.loanAmount * ((($scope.loanRate/100)/12)) * $scope.loanTerm) ;
            // console.debug("$scope.totalInterest: " + $scope.totalInterest);
        },
        $scope.getCalSalesTax = function() {
            $scope.totalSalesTax = parseInt(($scope.loanAmount * $scope.salesTax)).toFixed(2);
            //  console.debug(" $scope.totalSalesTax: " +   $scope.totalSalesTax);
        },
        $scope.getTotal60Payment = function() {
            $scope.total60Pmt = ($scope.loanMoPmt * 60);
            //  console.debug(" $scope.total60Pmt: " +   $scope.total60Pmt);
        },
        $scope.getTotalCost = function() {
            // var P = 25000;
            // var r = (6.5/100)/12 ;
            // var N = $scope.loanTerm;
            // var M = 60*((r*P)/ (1-(1+r))^-60);

            // console.debug("P= " + P);
            // console.debug("r= " + r);

            $scope.totalCost = 16171.82 + 1171.82;
            // $scope.loanMoPmt = P*(r*Math.pow(1+r,N))/(Math.pow(1+r,N)-1);
        }
    $scope.getAmoTableVal = function() {

            $scope.init();

//             $scope.moPmt = $scope.getMonthPmt();

// $scope.calData.interestRate = 3.0;
//             $scope.monthlyRate = ($scope.calData.interestRate / 100) / 12;
//             $scope.monthlyInt = $scope.calData.loanAmount * $scope.monthlyRate;
//             $scope.prinPmt = $scope.moPmt - $scope.monthlyInt;
//             $scope.newPrinAmt = $scope.calData.loanAmount - $scope.prinPmt;
//             console.debug(" $scope.monthlyRate:" + $scope.monthlyRate);
//             console.debug(" $scope.monthlyInt:" + $scope.monthlyInt);
//             console.debug(" $scope.prinPmt :" + $scope.prinPmt);
//             console.debug(" $scope.newPrinAmt :" + $scope.newPrinAmt);
//             $scope.test = $scope.calData.loanAmount;
//             $scope.originalTest = $scope.calData.loanAmount;

//             var today = new Date();
//             var dd = today.getDate();
//             var mm = today.getMonth() + 1; //January is 0!
//             var yyyy = today.getFullYear();
//             var month = 0;
//             $scope.calData.loanTerm = 30;
//             for (var i = 0; i < $scope.calData.loanTerm; i++) {

//                 var x = i; //or whatever offset
//                 var CurrentDate = new Date();
//                 CurrentDate.setMonth(CurrentDate.getMonth() + i);
//                 var date = new Date(CurrentDate);


//                 $scope.monthlyRate = ($scope.calData.interestRate / 100) / 12; //months interest
//                 //     console.debug(" $scope.monthlyRate:"+  $scope.monthlyRate);
//                 $scope.monthlyInt = $scope.test * $scope.monthlyRate;


//                 $scope.test -= $scope.moPmt;



//                 $scope.pmt = $scope.moPmt - $scope.monthlyInt; //new principal for

//                 var z = ($scope.loanRate / 100) / 12; //monthly rate


//                 $scope.intTotal = $scope.monthlyInt;
//                 $scope.intTotal = $scope.intTotal * i++;

//                 // $scope.amoPmtData.push({
//                 //     date: (date.getMonth() + 1) + '/' + date.getDate() + '/' + date.getFullYear(),
//                 //     intAmt: parseInt($scope.monthlyInt).toFixed(2),
//                 //     balanceAmt: parseInt($scope.test).toFixed(2),
//                 //     pmtAmt: parseInt($scope.getMonthPmt()).toFixed(2),
//                 //     perDiem:"$1.23",
//                 //     principalPmt: parseInt($scope.getMonthPmt()).toFixed(2) - parseInt($scope.monthlyInt).toFixed(2),
//                 //     totalIntAmt: $scope.intTotal
//                 // });

// $scope.amoPmtData[0].intAmt =15000;

// $scope.amoPmtData[0].balanceAmt ="05/04/2017";

// $scope.amoPmtData[0].pmtAmt =270;

// $scope.amoPmtData[0].perDiem ="$1.23";
// $scope.amoPmtData[0].principalPmt ="05/04/2017";

// $scope.amoPmtData[0].totalIntAmt ="05/04/2017";


//             }


        },

        
    $scope.calculate = function() {
        console.debug("start: calculating..");
        $scope.init();
        $scope.loanMoPmt =237;
        // $scope.getMonthPmt();
        // $scope.getCalInterest();
        // $scope.getCalSalesTax();
        // $scope.getTotal60Payment();
 $("#highcharts-2hxld18-0").show();
           $scope.amoPmtData = [
    {id : 0, date:$scope.date,intAmt:"$"+111,
            pmtAmt:"$"+230,
            perDiem:"$"+1.23,
            principalPmt:"$"+270,
           totalIntAmt:"$"+36,balanceAmt:"$15,000"},
    {id : 1, date:$scope.date,intAmt:"$"+147,
            pmtAmt:"$"+230,
            perDiem:"$"+1.23,
            principalPmt:"$"+270,
           totalIntAmt:"$"+36,balanceAmt:"$14,768"},
    {id : 2, date:$scope.date,intAmt:"$"+182,
            pmtAmt:"$"+230,
            perDiem:"$"+1.23,
            principalPmt:"$"+270,
           totalIntAmt:"$"+35,balanceAmt:"$14,538"},

     {id : 3,date:$scope.date,intAmt:"$"+216,
            pmtAmt:"$"+230,
            perDiem:"$"+1.23,
            principalPmt:"$"+270,
           totalIntAmt:"$"+35,balanceAmt:"$14,268"},
    {id : 4, date:$scope.date,intAmt:"$"+250,
            pmtAmt:"$"+230,
            perDiem:"$"+1.23,
            principalPmt:"$"+270,
           totalIntAmt:"$"+35,balanceAmt:"13,768"},
    {id : 5,date:$scope.date,intAmt:"$"+284,
            pmtAmt:"$"+230,
            perDiem:"$"+1.23,
            principalPmt:"$"+270,
           totalIntAmt:"$"+34,balanceAmt:"13,468"},

];
// $scope.amoPmtData[0].intAmt =1200;

// $scope.amoPmtData[0].intAmt ="05/04/2017";

// $scope.amoPmtData[0].pmtAmt =270;

// $scope.amoPmtData[0].perDiem ="$1.23";
// $scope.amoPmtData[0].principalPmt ="05/04/2017";

// $scope.amoPmtData[0].totalIntAmt ="05/04/2017";
          // $scope.getAmoTableVal();
        $scope.displayAmorSchedule = true;
        $scope.totalCost = 16171.82 + 1171.82;
        console.debug("end: calculating..");
    }

});

$(function () {
     
            //   $('#datetimepicker12').datetimepicker({
            //     inline: true,
            //     sideBySide: false,
            //     toolbarPlacement:'top',
            //     showTodayButton:true,

            // });
                           $('#datepicker').datepicker({
    daysOfWeekDisabled: [0,6]
});
 
    // $('.calendar').calendar();

    // Radialize the colors
Highcharts.getOptions().colors = Highcharts.map(Highcharts.getOptions().colors, function (color) {
    return {
        radialGradient: {
            cx: 0.5,
            cy: 0.3,
            r: 0.7
        },
        stops: [
            [0, color],
            [1, Highcharts.Color(color).brighten(-0.3).get('rgb')] // darken
        ]
    };
});

    var myChart = Highcharts.chart('container', {
    chart: {
        plotBackgroundColor: null,
        plotBorderWidth: null,
        plotShadow: false,
        type: 'pie'
    },
    title: {
        text: ''
    },
    tooltip: {
        pointFormat: '${point.y:.2f}',
    },
    plotOptions: {
        pie: {
            allowPointSelect: true,
            cursor: 'pointer',
            dataLabels: {
                enabled: true,
                // format: '{point.percentage:.1f} %',
                format:'${point.y:.2f}',
                style: {
                    color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
                },
                connectorColor: 'silver'
            },
             showInLegend: true
        }
    },
    series: [{
        name: 'Brands',
        data: [
            { name: 'Principal', y: 56.33 },


            { name: 'Interest', y: 40.2 }
        ]
    }]
});

});
window.console || (console = { log: function() {} });

var OpenClose = { settings: { $triggers: $(".openclose-trigger"), $triggers_secondary: $(".openclose-trigger-secondary"), $to_hide: $(".openclose-hidden") }, init: function() { OpenClose.bind() }, bind: function() { OpenClose.settings.$triggers.click(function() {
            var e = $(this);
            return OpenClose.manageClick(e), !1 }), OpenClose.settings.$triggers_secondary.click(function() {
            var e = $(this),
                t = e.attr("href"),
                n = $("a[href='" + t + "'].openclose-trigger").first();
            return n.first().click(), !1 }), OpenClose.hideThings();
        var e = location.hash;
        OpenClose.settings.$to_hide.each(function() {
            var t = $(this).attr("id");
            if (e == "#" + t) {
                var n = $("a[href='#" + t + "']"),
                    i = $("a[href='#" + t.substr(0, t.length - 3) + "']");
                n.first().click(), i.first().click() } }) }, manageClick: function(e) { OpenClose.displayToggle(e), OpenClose.textToggle(e) }, hideThings: function() { OpenClose.settings.$to_hide.hide() }, displayToggle: function(e) {
        var t = e.attr("href"),
            n = $(t);
        n.hasClass("open") ? (n.removeClass("open").slideToggle(300), e.removeClass("active")) : (n.addClass("open").slideToggle(300), e.addClass("active")) }, textToggle: function(e) {
        if (e.data("default-text")) var t = e.data("default-text");
        if (e.data("alt-text")) var n = e.data("alt-text");
        var i = e.text();
        n && t && e.text(t == i ? n : t) } };

        $("#highcharts-54dgm7g-0 > svg > text").hide();

$(document).ready(function() {OpenClose.init() });

